name: Conditional Builds Workflow

on: [push, pull_request]

jobs:
  build:
    name: Build on ${{ matrix.os }} ${{ matrix.arch }} - ${{ matrix.buildType }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-14]
        arch: [amd64, arm64]
        buildType: [release]
        include:
          - os: ubuntu-latest
            goos: linux
            platform: linux
          - os: windows-latest
            goos: windows
            platform: windows
          - os: macos-latest
            goos: darwin
            platform: darwin
          - os: macos-14
            goos: darwin
            platform: darwin
        exclude:
          # Example: Exclude ARM builds on Windows
          - os: macos-14
            arch: amd64
          - os: macos-latest
            arch: arm64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4.1.1

      - name: Setup Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version: '^1.19'

      - name: Setup libappindicator3-dev for linux
        if: matrix.goos == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install gcc libgtk-3-dev libayatana-appindicator3-dev

      - name: Build
        run: |
          echo "[PRE] GOOS: $(go env GOOS) GOARCH: $(go env GOARCH)"

          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.arch }}

          echo "[POST] GOOS: $(go env GOOS) GOARCH: $(go env GOARCH)"

          echo "Building for ${{ matrix.goos }}, ${{ matrix.arch }}, ${{ matrix.buildType }}"
          go build -o myapp-${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.buildType }} ${{ github.workspace }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: myapp-${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.buildType }}
          path: myapp-${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.buildType }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

